.section .data
caesar:
        .byte 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x09, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20
        .byte 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
        .byte 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F
        .byte 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F
        .byte 0x40, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52
        .byte 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x41, 0x42, 0x43, 0x5E, 0x5E, 0x5E, 0x5E, 0x5E
        .byte 0x5E, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72
        .byte 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x61, 0x62, 0x63, 0x5E, 0x5E, 0x5E, 0x5E, 0x5E

.section .bss
       .comm buf, 4096

.section .text
.globl _start
_start:

read:
        movq $0, %rax # system read
        movq $0, %rdi # stdin
        movq $buf, %rsi
        movq $4096, %rdx
        syscall

        movq %rax, %rdi # store reads return value
        cmpq $0, %rax
        je fini

# load translation table
        movq $caesar, %rbx


# get buf
        movq $buf, %rdx  # memory location of start of string to be translated
        movq %rdi, %rcx  # number of bytes read into buf

translate:
        xorq %rax, %rax
        movb (%rdx, %rcx), %al
        xlat
        movb %al, (%rdx, %rcx)
        decq %rcx
        jnz translate

        xorq %rax, %rax
        movb (%rdx, %rcx), %al
        xlat
        movb %al, (%rdx, %rcx)

write:
        movq $1, %rax 
        movq %rdi, %rdx
        movq $1, %rdi # stdout
        movq $buf, %rsi
        syscall
        jmp read

fini:        
       movq $60, %rax
       movq $0, %rsi
       syscall


